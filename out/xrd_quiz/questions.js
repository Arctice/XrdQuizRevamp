// Compiled by ClojureScript 1.9.946 {:static-fns true, :optimize-constants true}
goog.provide('xrd_quiz.questions');
goog.require('cljs.core');
goog.require('cljs.core.constants');
xrd_quiz.questions.questions = new cljs.core.PersistentVector(null, 26, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$question,"What's most important to you?",cljs.core.cst$kw$num,"1",cljs.core.cst$kw$answers,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$specialist,"Doing one thing and doing it well."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$prepared,"Having tools for every situation."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$emotional,"How well I emotionally connect with my character."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$rewarding,"Aesthetics/feeling suitably rewarded when I perform well."], null)], null),cljs.core.cst$kw$result,cljs.core.cst$kw$playstyle], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$question,"Who's your favourite character in the story?",cljs.core.cst$kw$num,"2",cljs.core.cst$kw$answers,cljs.core.cst$kw$roster,cljs.core.cst$kw$result,cljs.core.cst$kw$story_DASH_favourite], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$question,"Which character do you think looks the best?",cljs.core.cst$kw$num,"3",cljs.core.cst$kw$answers,cljs.core.cst$kw$roster,cljs.core.cst$kw$result,cljs.core.cst$kw$visuals_DASH_favourite], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$question,"Which character do you relate to the most?",cljs.core.cst$kw$num,"4",cljs.core.cst$kw$answers,cljs.core.cst$kw$roster,cljs.core.cst$kw$result,cljs.core.cst$kw$sympathy_DASH_favourite], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$question,"Which character do you think looks the worst?",cljs.core.cst$kw$num,"5",cljs.core.cst$kw$answers,cljs.core.cst$kw$roster,cljs.core.cst$kw$result,cljs.core.cst$kw$visuals_DASH_dislike], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$question,"Which character is your least favourite in general?",cljs.core.cst$kw$num,"6",cljs.core.cst$kw$answers,cljs.core.cst$kw$roster,cljs.core.cst$kw$result,cljs.core.cst$kw$general_DASH_dislike], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$question,"What sort of moral system do you like in a character?",cljs.core.cst$kw$num,"7",cljs.core.cst$kw$answers,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$good,"Any sort of \"good\". I don't really enjoy playing as assholes."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$chaotic_DASH_good,"I like characters with good intentions that bend the rules to accomplish their goals. Like either Chaotic Good or a jerk with a heart of gold."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$white_DASH_good,"I like pure \"good\" or heroic characters, not the morally grey sort."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$neutral,"I like neutral characters."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$villain,"I love to play the villain!"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$disregard,"I have no strong feelings one way or another."], null)], null),cljs.core.cst$kw$result,cljs.core.cst$kw$character_DASH_morals], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$question,"Do you have a character gender preference?",cljs.core.cst$kw$num,"8",cljs.core.cst$kw$answers,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$only_DASH_male,"Strongly male."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$male,"Male."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$female,"Female."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$only_DASH_female,"Strongly female."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$gender_DASH_subversive,"I specifically like gender subversive or androgynous characters."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$disregard,"None. Please don't factor gender into my result."], null)], null),cljs.core.cst$kw$result,cljs.core.cst$kw$gender_DASH_preference], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$question,"When in a match, what's your primary focus or favourite thing to do?",cljs.core.cst$kw$num,"9",cljs.core.cst$kw$answers,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$mixups,"Keeping the pressure on my opponent."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$neutral,"Outmanoeuvring the foe."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$conditioning,"Mindgames!"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$combos,"Executing the right combos in the right situations."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$other,"None of the above/I haven't played any fighting games yet."], null)], null),cljs.core.cst$kw$result,cljs.core.cst$kw$player_DASH_focus], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$question,"What's the most important or enjoyable quality in a character for you?",cljs.core.cst$kw$num,"10",cljs.core.cst$kw$answers,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$damage,"Damage. Everything else is secondary."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$defense,"Health points. I want to last long in combat."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$mobility,"Mobility. I like going fast or enjoy unconventional movement options."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$tools,"Utility. Give me a lot of tricks, tools and options to play with."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$all_DASH_rounder,"I would prefer to play an all-rounder."], null)], null),cljs.core.cst$kw$result,cljs.core.cst$kw$strength_DASH_preference], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$question,"Do you have fun when zoning?",cljs.core.cst$kw$num,"11",cljs.core.cst$kw$answers,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$priority,"Yes! Very much so."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$yes,"Yes."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$disregard,"No/no preference."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$no,"HELL no."], null)], null),cljs.core.cst$kw$result,cljs.core.cst$kw$zoning_DASH_preference], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$question,"Do you have fun playing with a rushdown playstyle?",cljs.core.cst$kw$num,"12",cljs.core.cst$kw$answers,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$priority,"Definitely!"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$yes,"I do."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$disregard,"No/no preference."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$no,"I hate rushdown gameplay."], null)], null),cljs.core.cst$kw$result,cljs.core.cst$kw$rushdown_DASH_preference], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$question,"You indicated you like both Rushdown and Zoning. What would you think of a character who does both?",cljs.core.cst$kw$num,"12.5",cljs.core.cst$kw$answers,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$priority,"I'd like that. Please make it a priority."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$yes,"Fine by me if I get one."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$no,"No. I'd prefer playing one or the other."], null)], null),cljs.core.cst$kw$result,cljs.core.cst$kw$mixed_DASH_playstyle_DASH_preference], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$question,"Do you enjoy playing the one player game?",cljs.core.cst$kw$num,"13",cljs.core.cst$kw$answers,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$yes,"I love getting opponent into a situation where they cannot really do anything."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$sometimes,"I am fine with doing it sometimes, if the need arises."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$no,"I would rather play a more footsies/neutral/two player game"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$disregard,"No preference."], null)], null),cljs.core.cst$kw$result,cljs.core.cst$kw$1p_DASH_preference], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$question,"What range are you most comfortable fighting at?",cljs.core.cst$kw$num,"14",cljs.core.cst$kw$answers,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$close,"I'm a close-range fighter."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$mid,"I feel most comfortable at mid range."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$long,"I most enjoy fighting at long ranges."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$all,"I want to be able to handle all ranges!"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$disregard,"No idea/anything goes."], null)], null),cljs.core.cst$kw$result,cljs.core.cst$kw$range_DASH_preference], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$question,"Does the idea of stances or multiple movesets in the same character sound appealing?",cljs.core.cst$kw$num,"15",cljs.core.cst$kw$answers,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$yes,"I like the idea and it can help my game or sounds really fun."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$no,"I would prefer to just play a character with one moveset."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$disregard,"No preference."], null)], null),cljs.core.cst$kw$result,cljs.core.cst$kw$stance_DASH_preference], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$question,"Are you ok with charge motions for your special moves?",cljs.core.cst$kw$num,"16",cljs.core.cst$kw$answers,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$heavy,"I like using them for a lot for my combos, spacing and setups."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$light,"If it is just for the occasional neutral/defensive use, they are cool with me"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$none,"I want to use a character that has 0 charge motions for their special moves"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$disregard,"No preference."], null)], null),cljs.core.cst$kw$result,cljs.core.cst$kw$charge_DASH_preference], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$question,"What is your preferred way of opening people up?",cljs.core.cst$kw$num,"17",cljs.core.cst$kw$answers,new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$frame_DASH_traps,"The simple Frame Trap/throw game."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$block_DASH_pressure,"RISC/Blockstring Pressure."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$grapple,"Command Grabs."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$high_DASH_low,"The High/Low mixup."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$crossups,"The Left/Right mixup."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$unblockable,"An Unblockable setup."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$disregard,"No preference."], null)], null),cljs.core.cst$kw$result,cljs.core.cst$kw$mixup_DASH_preference], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$question,"Are you ok with having setplay in your moveset?",cljs.core.cst$kw$num,"18",cljs.core.cst$kw$answers,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$neutral,"I like the idea of setplay as a basis for starting my offense/neutral."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$oki,"I'm fine with setplay as a way of setting pressure up on the opponent on knockdown"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$none,"I would rather have a moveset that has minimal to no setplay"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$disregard,"No preference."], null)], null),cljs.core.cst$kw$result,cljs.core.cst$kw$setplay_DASH_preference], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$question,"Would you like a projectile?",cljs.core.cst$kw$num,"19",cljs.core.cst$kw$answers,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$standard,"I want at least a standard full screen horizontal moving one."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$limited,"As long as it controls good space it doesn't have to be full screen or horizontal moving"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$special,"I want a tricky, meter-only, controllable, or some kind of unique projectile people have trouble dealing with"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$none,"I do not need projectiles to win"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$disregard,"No preference."], null)], null),cljs.core.cst$kw$result,cljs.core.cst$kw$projectile_DASH_preference], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$question,"Do you want a meterless or metered reversal?",cljs.core.cst$kw$num,"20",cljs.core.cst$kw$answers,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$dp,"I need a DP/meterless reversal."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$metered,"Metered-only Reversals are fine in exchange for more neutral/offensive options."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$disregard,"No preference."], null)], null),cljs.core.cst$kw$result,cljs.core.cst$kw$dp_DASH_preference], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$question,"Would you feel comfortable managing resources while playing your character?",cljs.core.cst$kw$num,"21",cljs.core.cst$kw$answers,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$priority,"Yes, please! I'd like a character that focuses on managing a resource."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$yes,"I'd like to manage a moderate amount!"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$fine,"I'm okay with some."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$no,"No, thanks. I just want to focus on my opponent and I."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$disregard,"Doesn't matter."], null)], null),cljs.core.cst$kw$result,cljs.core.cst$kw$resource_DASH_preference], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$question,"Pick the character resource type that sounds the most fun:",cljs.core.cst$kw$num,"22",cljs.core.cst$kw$answers,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$meter,"Managing an additional meter sounds fun."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$limiting,"Maybe something like ammunition, or a summoned projectile that I have to keep track of."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$none,"Nothing special. I'll stick to the basic meter."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$disregard,"No preference."], null)], null),cljs.core.cst$kw$result,cljs.core.cst$kw$resource_DASH_type], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$question,"How good do you want your vortex/knockdown pressure to be?",cljs.core.cst$kw$num,"23",cljs.core.cst$kw$answers,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$none,"The same options I would have starting a neutral blockstring is fine"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$basic,"I want the setplay/projectile pressure as they are getting up."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$50_DASH_50s,"I want to have so many mixup options that the opponent will have to make a big guess on wakeup or risk getting blown up."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$disregard,"No preference."], null)], null),cljs.core.cst$kw$result,cljs.core.cst$kw$oki_DASH_preference], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$question,"What tier of character do you want to play?",cljs.core.cst$kw$num,"24",cljs.core.cst$kw$answers,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$high,"High"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$mid,"Mid"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$low,"Low"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$not_DASH_high,"Any but high"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$not_DASH_low,"Any but low"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$any,"Any"], null)], null),cljs.core.cst$kw$result,cljs.core.cst$kw$tier], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$question,"What's your current skill level in fighting games?",cljs.core.cst$kw$num,"25",cljs.core.cst$kw$answers,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$new,"I am new to fighting games."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$intermediate,"I have played some fighting games, or have played Guilty Gear for a while."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$passionate,"I am passionate about fighting games, either on a casual or competitive level."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$disregard,"Don't factor my skill in. I'll play who I want."], null)], null),cljs.core.cst$kw$result,cljs.core.cst$kw$skill_DASH_level], null)], null);
